version: "3"

services:
  api:
    build: .
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    env_file:
      - .env

    volumes:
      - ./.env:/app/.env
  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/ngrok.yml"
    volumes:
      - ./ngrok.yml:/ngrok.yml
    ports:
      - 4040:4040
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    networks:
      - app-network
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./monitoring/loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - ./data/loki:/loki
    networks:
      - app-network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
  promtail:
    image: grafana/promtail:2.8.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./monitoring/loki/promtail-config.yaml:/etc/loki/promtail-config.yaml
    command: -config.file=/etc/loki/promtail-config.yaml
    depends_on:
      - loki
    networks:
      - app-network
volumes:
  grafana_data:

networks:
  app-network:
    driver: bridge
